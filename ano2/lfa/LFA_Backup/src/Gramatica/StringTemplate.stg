booleanValue ::= [
   "true":"true",
   "false":"false",
   default:"null"
]

typeValue ::= [
   "integer":"int",
   "real":"double",
   "boolean":"boolean",
   default:"null"
]

typeFormat ::= [
   "integer":"",
   "real":"",
   "boolean":"",
   default:"null"
]

operators ::= [
   "*":"*",
   "/":"/",
   "//":"/",
   "\\\\":"%",
   "+":"+",
   "-":"-",
   "=":"==",
   "/=":"!=",
   default:"null"
]

main(name,stat) ::= <<
import Gramatica.Tabela;
import Gramatica.tabela2;

public class <name> {
   public static void main(String[] args) {
      <stats(stat)>
   }
}

>>


test(value) ::= << <value> >>

stats(stat) ::= <<
<if(stat)><stat; separator="\n"><endif>
>>

init(value) ::= "<if(value)> = <value><endif>"
declaracao(dataType,name) ::= << <dataType> <name>;  >> 

atribuicao(name,expr) ::= << <name> = <expr>;>>

math(e1,op,e2) ::= << <e1> <op> <e2> >>
parent(x) ::= << (<x>) >>

newTable1(name)::= <<  new Tabela("<name> ") >>
newTable2(name,x,y) ::= << new Tabela("<name> ",<y>,<x>) >>
newTable3(name) ::= << new tabela2(" <name> ") >>

copyTable(table) ::= << <table> >>

insertElem1(elem,x,y,table) ::= << <table>.add(<x>,<y>,<elem>); >>
insertElem2(elem,var1,var2,table) ::= << <table>.setData("<var1>","<var2>",<elem>); >>

removeElem(x,y,table) ::= << <table>.delete(<x>,<y>); >>


getElem1Int(x,y,table) ::= << (int) <table>.get(<x>,<y>) >>
getElem1Double(x,y,table) ::= << (double) <table>.get(<x>,<y>) >>
getElem1String(x,y,table) ::= << (String) <table>.get(<x>,<y>) >>

getElem2Int(var1,var2,table) ::= << (int) <table>.getElem("<var1>","<var2>") >>
getElem2Double(var1,var2,table) ::= << (double) <table>.getElem("<var1>","<var2>") >>
getElem2String(var1,var2,table) ::= << (String) <table>.getElem("<var1>","<var2>") >>

readTable(file,table)::= << <table>.readFromCSV("<file>.csv"); >>

removeTable(table) ::= << <table> = null; >>

addRow1(x,table1,y,table2) ::= << <table1>.sumRows(<x>,<table2>,<y>); >>
addRow2(var1,table1,var2,table2) ::= << <table1>.sumRows(<var1>,<table2>,<var2>); >>

copyRow1(x,table1,y,table2) ::= << <table2>.fillRow(<table1>.getRow(<x>),<y>); >>
copyRow2(var1,table1,var2,table2) ::= << <table2>.addRowFrom(<var1>,<table1>); >>

newRow1(x,table) ::= << <table>.addRow(<x>);>>
newRow2(table) ::= << <table>.addRow();>>
newRow3(var,table) ::= << <table>.addRow("<var>");>>

clearRow1(x,table) ::= << <table>.deleteRow(<x>); >>
clearRow2(var,table) ::= << <table>.clearRow(<var>); >>

addColumn1(x,table1,y,table2) ::= << <table1>.sumColumns(<x>,<table2>,<y>); >>
addColumn2(var1,table1,var2,table2) ::= << <table1>.sumColumns(<var1>,<table2>,<var2>); >>

copyColumn1(x,table1,y,table2) ::= << <table2>.fillColumn(<table1>.getColumn(<x>),<y>); >>
copyColumn2(var1,table1,table2) ::= << <table2>.addColumnFrom("<var1>",<table1>); >>

newColumn1(x,table) ::= << <table>.addColumn(<x>);>>
newColumn2(table) ::= << <table>.addColumn();>>
newColumn3(var,type,table) ::= << <table>.addColumn("<var>","<type>");>>

clearColumn1(x,table) ::= << <table>.deleteColumn(<x>); >>
clearColumn2(var,table) ::= << <table>.clearColumn(<var>); >>

export(table,file)::= << <table>.extractToCSV("<file>.csv");>>

printTable(table) ::= << <table>.print(); >>
printVar(var)     ::= << System.out.print(<var>+"\n"); >>

printRow1(x,table) ::= << <table>.printRow(<x>); >>
printRow2(var,table) ::= << <table>.printRow("<var>"); >>

printColumn1(x,table) ::= << <table>.printColumn(<x>); >>
printColumn2(var,table) ::= << <table>.printColumn("<var>"); >>
